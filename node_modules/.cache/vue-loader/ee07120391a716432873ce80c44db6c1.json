{"remainingRequest":"/Users/anusornmennakred/Documents/Vue/live-homepro-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anusornmennakred/Documents/Vue/live-homepro-admin/src/views/StartLivePage.vue?vue&type=style&index=0&id=4415c9d3&scoped=true&lang=css&","dependencies":[{"path":"/Users/anusornmennakred/Documents/Vue/live-homepro-admin/src/views/StartLivePage.vue","mtime":1597736466235},{"path":"/Users/anusornmennakred/Documents/Vue/live-homepro-admin/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anusornmennakred/Documents/Vue/live-homepro-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/anusornmennakred/Documents/Vue/live-homepro-admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/anusornmennakred/Documents/Vue/live-homepro-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anusornmennakred/Documents/Vue/live-homepro-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5wbGF5ZXIgewogIGhlaWdodDogNDI2cHg7Cn0KCi5lbC1zZWxlY3QgPiAuZWwtaW5wdXQgewogIGRpc3BsYXk6IGJsb2NrOwogIHdpZHRoOiA1MDBweDsKfQoKLnBsYXllciA+Pj4gLmFnb3JhX3ZpZGVvX3BsYXllciB7CiAgd2lkdGg6IDQyNnB4OwogIGhlaWdodDogNDI2cHg7CiAgb2JqZWN0LWZpdDogY29udGFpbiAhaW1wb3J0YW50Owp9CgouZWwtcHJvZ3Jlc3MgPj4+IC5lbC1wcm9ncmVzcy1iYXJfX291dGVyIHsKICBoZWlnaHQ6IDIwcHggIWltcG9ydGFudDsKfQo="},{"version":3,"sources":["StartLivePage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6MA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"StartLivePage.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <div class=\"flex flex-wrap items-start justify-between\">\n      <h1 class=\"text-3xl mb-6\">Start to Live</h1>\n      <div\n          @click=\"goLiveNow\"\n          class=\"text-xl items-baseline cursor-pointer bg-red-600 px-5 py-2 rounded-lg hover:bg-red-700 text-white\"\n      >\n        Start Live\n        <span class=\"material-icons\" style=\"vertical-align: bottom;margin-bottom: 6px\">live_tv</span>\n      </div>\n    </div>\n    <div class=\"flex flex-row\">\n      <div class=\"w-1/3\">\n        <div id=\"pre-local-player\" class=\"player w-full\"></div>\n      </div>\n      <div class=\"w-2/3 flex flex-wrap content-between ml-10\">\n        <div class=\"w-1/4 text-xl\">Title</div>\n        <div class=\"w-3/4\">\n          <el-input placeholder=\"Please input\" v-model=\"modelTitle\"></el-input>\n        </div>\n        <div class=\"w-1/4 text-xl\">Camera</div>\n        <div class=\"w-3/4\">\n          <el-select v-model=\"currentCamera\" placeholder=\"Select\" style=\"width:100%\">\n            <el-option\n                v-for=\"camera in cameras\"\n                :key=\"camera.id\"\n                :label=\"camera.label\"\n                :value=\"camera\"\n            ></el-option>\n          </el-select>\n        </div>\n        <div class=\"w-1/4 text-xl\">Microphone</div>\n        <div class=\"w-3/4\">\n          <el-select v-model=\"currentMicrophone\" placeholder=\"Select\" style=\"width:100%\">\n            <el-option\n                v-for=\"microphone in microphones\"\n                :key=\"microphone.id\"\n                :label=\"microphone.label\"\n                :value=\"microphone\"\n            ></el-option>\n          </el-select>\n          <div class=\"w-full h-10 mt-5\">\n            <el-progress :percentage=\"volumeTest\" :color=\"customColorMethod\" :show-text=\"false\"></el-progress>\n          </div>\n        </div>\n\n      </div>\n    </div>\n    <div class=\"flex flex-wrap items-center justify-between\">\n      <h1 class=\"text-3xl my-3\">Product in Live (12)</h1>\n      <div\n          @click=\"goFindProduct\"\n          class=\"text-xl my-3 items-baseline cursor-pointer bg-green-400 px-5 py-2 rounded-full hover:bg-green-500 text-white\"\n      >Add +\n      </div>\n    </div>\n    <div class=\"flex flex-wrap\">\n      <CardProduct v-for=\"product in mockProduct\" :key=\"product.id\" :productData=\"product\"/>\n    </div>\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\nimport {AGORA_APP_ID} from '@/config/agora.config'\nimport AgoraRTC from \"agora-rtc-sdk-ng\";\nimport CardProduct from \"../components/CardProduct\";\nimport firebase from \"firebase\";\n\nconst db = firebase.firestore();\n\nexport default {\n  name: \"StartLivePage\",\n  components: {\n    CardProduct,\n  },\n  data() {\n    return {\n      mockProduct: [\n        {\n          sku: 12324,\n          image: \"url\",\n          brand: \"brand\",\n          title: \"title\",\n          price: 12334,\n        },\n      ],\n      modelTitle: \"\",\n      currentCamera: null,\n      currentMicrophone: null,\n      currentResolution: null,\n      cameras: [],\n      microphones: [],\n      localTracks: {\n        videoTrack: null,\n        audioTrack: {\n          getVolumeLevel: function () {\n            return 0;\n          },\n        },\n      },\n      resolutions: [\n        {\n          label: \"720x1280 15p\",\n        },\n        {\n          label: \"720x1280 30p\",\n        },\n      ],\n    };\n  },\n  async beforeCreate() {\n    this.cameras = await AgoraRTC.getCameras();\n    this.microphones = await AgoraRTC.getMicrophones();\n\n    [\n      this.localTracks.audioTrack,\n      this.localTracks.videoTrack,\n    ] = await Promise.all([\n      AgoraRTC.createMicrophoneAudioTrack(),\n      AgoraRTC.createCameraVideoTrack(),\n    ]);\n\n    this.localTracks.videoTrack.play(\"pre-local-player\");\n\n    this.cameras.length === 0\n        ? (this.currentCamera = \"No Camera\")\n        : (this.currentCamera = this.cameras[0]);\n\n    this.microphones.length === 0\n        ? (this.currentMicrophone = \"No Microphone\")\n        : (this.currentMicrophone = this.microphones[0]);\n  },\n  methods: {\n    customColorMethod(percentage) {\n      if (percentage < 30) {\n        return \"#cbd5e0\";\n      } else if (percentage < 70) {\n        return \"#38a169\";\n      } else {\n        return \"#f56565\";\n      }\n    },\n    goLiveNow() {\n      let channel = Date.now().toString()\n      this.$store.commit('setCurrentOption', {\n        appId: AGORA_APP_ID,\n        camera: this.currentCamera,\n        microphone: this.currentMicrophone,\n        channel: channel,\n        title: this.modelTitle\n      })\n      this.$store.commit('setIsLive', true)\n      db.collection(\"CurrentLive\").doc(channel).set({\n        startTime: Date.now(),\n        channelName: channel,\n        onLive: true,\n        title: this.modelTitle\n      }).then(() => {\n        this.$notify({\n          title: 'Success',\n          message: 'Start Live Success',\n          type: 'success'\n        });\n        this.$router.push({path: 'live_now'})\n      }).catch(e => {\n        this.$notify({\n          title: 'Error',\n          message: e,\n          type: 'error'\n        });\n      })\n    },\n    goFindProduct() {\n      this.getVideo()\n      // console.log(this.localTracks.videoTrack._videoHeight)\n      this.$router.push({path: \"findproduct\"});\n    },\n    getVideo() {\n      let v = document.getElementsByTagName('video');\n      v[0].addEventListener(\"loadedmetadata\", function (e) {\n        console.log('e = ' + e)\n      }, false);\n    }\n  },\n  computed: {\n    volumeTest() {\n      return this.localTracks.audioTrack.getVolumeLevel() * 100;\n    },\n  },\n  watch: {\n    currentCamera(camera) {\n      this.currentCamera = camera\n      this.localTracks.videoTrack.setDevice(camera.deviceId);\n    },\n    currentMicrophone(microphone) {\n      this.currentMicrophone = microphone\n      this.localTracks.audioTrack.setDevice(microphone.deviceId);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.player {\n  height: 426px;\n}\n\n.el-select > .el-input {\n  display: block;\n  width: 500px;\n}\n\n.player >>> .agora_video_player {\n  width: 426px;\n  height: 426px;\n  object-fit: contain !important;\n}\n\n.el-progress >>> .el-progress-bar__outer {\n  height: 20px !important;\n}\n</style>"]}]}